'''
CS3516 Computer Networks Project 1
Submitted by Hannan Liang (hliang2@wpi.edu)
Last Modified: 11/04/2018
'''

# Server

import socket
import sys
import time
import os
# from _thread import *
# import threading
#
# print_lock = threading.Lock()

#---------------------------------------------------------
host = ''
# serverName = 'socketServer/hliang2'
#---------------------------------------------------------

def getTime():
    return time.strftime("%a, %d %b %Y %H:%M:%S GMT", time.gmtime())
# parse requests from server
def parseRequest(connSocket):
    path = ''
    f = ''
    contentLength = 0
    statusCode = '400 Bad Request'

    request = connSocket.recv(1024)
    print request

    # TODO: check for other header file of the request
    lines = request.splitlines()
    # parse the first line of the request
    for line in lines:
        words = line.split()
        if words[0] == 'GET' and words[2] == 'HTTP/1.1' and '/' in words[1]:
            domain, path = words[1].split('/',1)
            path = './' + path
            try:
                f = open(path)
                contentLength = os.stat(path).st_size
                statusCode = '200 OK'
            except IOError as e:
                statusCode = '404 Not Found'
        break
    return statusCode, f, contentLength

# send responses to client
def sendResponse(statusCode, f, contentLength, connSocket):
    # send header
    header = ('HTTP/1.1 %s\r\n'
            'Date: %s\r\n'
            'Server: %s\r\n'
            'Content-Type: text/html\r\n'
            'Content-Length: %s\r\n\r\n') % (statusCode, getTime(), socket.getfqdn(), contentLength)
    connSocket.sendall(header)

    payload = ''
    # date = time.asctime(time.localtime(time.time()))
    if statusCode == '200 OK':          # when a file is located
        # TODO: check for other status code causes
        # TODO: loop through the file and send
        payload = f.read(1024)
        while payload != '':
            connSocket.sendall(payload)
            payload = f.read(1024)
    elif statusCode == '404 Not Found': # when a file cannot be located
        payload = 'Requested file cannot be located.'
    else:                               # in another other cases
        payload = 'Invalid request.'


        # for line in f:
        #     connSocket.send(line)
        # l = f.readline(1024)
        # while l != '':
        #     connSocket.send(l)
        #     l = f.read(1024)

# def threaded(c):
#     while True:
#         request = c.recv(1024)

def Main():
    # setting domain and port
    if len(sys.argv) == 2:
        port = int(sys.argv[1],10)
    else:
        print 'Invalid arguments. Please retry.'
        sys.exit()
    # establishing socket
    try:
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        print "Socket successfully created"
    except socket.error as err:
        print "socket creation failed with error %s" %(err)
    s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
    # bind socket and listen to port
    s.bind((host,port))
    s.listen(10)
    # s.settimeout(2.0)
    print 'socket binded to port %s' %(port)

    while True:
        connSocket, addr = s.accept()
        # successMsg = "You've connected to the server"
        # connSocket.send(successMsg)
        status, f, contentLength = parseRequest(connSocket)
        sendResponse(status, f, contentLength, connSocket)
        connSocket.close()
        print('Connection from %s --%s' % (addr, getTime()))

if __name__ == '__main__':
    Main()
